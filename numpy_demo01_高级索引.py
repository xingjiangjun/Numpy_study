import numpy as np
# 整数数组索引
x = np.array([[1,  2],  [3,  4],  [5,  6]]) 
y = x[[0,1,2],  [0,1,0]]  
print (y)

    # 指定索引数组的行列是什么
x = np.array([[  0,  1,  2],
              [  3,  4,  5],
              [  6,  7,  8],
              [  9,  10,  11]])  
print ('我们的数组是：' )
print (x)
print ('\n')
rows = np.array([[0,0],[3,3]]) # 此时虽然是二维数组，但在索引时会被展平
cols = np.array([[0,2],[0,2]]) # 同上
y = x[rows,cols] # 此时展开后为x[[0,0,3,3],[0,2,0,2]]
print  ('这个数组的四个角元素是：')
print (y)

    # 融入切片之后的示例
a = np.array([[1,2,3], [4,5,6],[7,8,9]])
b = a[1:3, 1:3] # 1:3表示行2,3，1:3表示列2,3
c = a[1:3,[1,2]] # 1:3表示行2,3，[1,2]表示列2,3 此处[1,2]不会被展平
d = a[...,1:] # ...表示所有行或者列，取决于在哪个位置，1:表示列2,3
print(b)
print(c)
print(d)

# 布尔数组索引
x = np.array([[  0,  1,  2],[  3,  4,  5],[  6,  7,  8],[  9,  10,  11]])  
print ('我们的数组是：')
print (x)
print ('\n')
print  ('大于 5 的元素是：')
print (x[x >  5])

# 这里使用~操作符来过滤掉非数字值
a = np.array([np.nan,  1,2,np.nan,3,4,5])  
print (a[~np.isnan(a)])

# 使用np.iscomplex(x) 来过滤掉复数
a = np.array([1,  2+6j,  5,  3.5+5j])  
print (a[np.iscomplex(a)])

# 花式索引根据索引数组的值作为目标数组的某个轴的下标来取值。
# 花式索引跟切片不一样，它总是将数据复制到新数组中。
    # 一维数组
x = np.arange(9)
print(x)
# 一维数组读取指定下标对应的元素
print("-------读取下标对应的元素-------")
x2 = x[[0, 6]] # 使用花式索引
print(x2)
print(x2[0])
print(x2[1])
    # 二维数组
x=np.arange(32).reshape((8,4)) # 学习用法
print(x)
# 二维数组读取指定下标对应的行
print("-------读取下标对应的行-------")
 # 顺序索引数组
print("-------顺序索引数组-------")
print (x[[4,2,1,7]])
 # 逆序索引数组
print("-------逆序索引数组-------")
print (x[[-4,-2,-1,-7]])
 # 传入多个索引数组（要使用 np.ix_）
print("-------传入多个索引数组（要使用 np.ix_）-------")
print (x[np.ix_([1,5,7,2],[0,3,1,2])])
# [1,5,7,2] ✖ [0,3,1,2]结果为：
# [1,0 1,3 1,1 1,2
#  5,0 5,3 5,1 5,2
#  7,0 7,3 7,1 7,2
#  2,0 2,3 2,1 2,2]

